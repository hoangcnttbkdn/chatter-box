name: Build and Deploy


on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        default: 'latest'
      
permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    environment:
      name: develop
      
    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v4
    
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.tag }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Get .env file from ssm 
      run: |
        aws ssm get-parameter --name "/chatter-box/ENV" --with-decryption --output text --query Parameter.Value > .env
        cat tag.txt
        cat .env
        ls -lah

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Upload artifact to S3 bucket
      run: |
        aws s3 sync --cache-control 'max-age=604800' dist/ s3://${{ secrets. AWS_S3_BUCKET_NAME }}/dist/ --delete --exclude '*.svg' --exclude index.html
        aws s3 sync --cache-control 'max-age=604800' dist/ s3://${{ secrets. AWS_S3_BUCKET_NAME }}/dist/ --delete --exclude '*' --include '*.svg' --content-type 'image/svg+xml'
        aws s3 sync --cache-control 'no-cache' dist/ s3://${{ secrets. AWS_S3_BUCKET_NAME }}/dist/

    - name: Refresh cache 
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths '/*'

