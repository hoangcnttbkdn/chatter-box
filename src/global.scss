@tailwind base;
@tailwind components;
@tailwind utilities;

@import url(./assets/scss/font.scss);
@import 'animate.css';

* {
    scroll-behavior: smooth;
    font-family: 'Plus Jakarta Regular', sans-serif;
}

body {
    overflow-x: hidden;
}

.launch-app-btn {
    display: grid;
    place-content: center;
    color: white;
    text-shadow: 0 1px 0 #000;

    --border-angle: 0turn; // For animation.
    --main-bg: conic-gradient(
        from var(--border-angle),
        rgb(249, 2, 2),
        rgb(188, 2, 30) 5%,
        rgb(252, 8, 24) 60%,
        rgb(141, 5, 5) 95%
    );

    border: solid 5px transparent;
    --gradient-border: conic-gradient(
        from var(--border-angle),
        transparent 25%,
        rgb(129, 8, 8),
        rgb(138, 3, 27) 99%,
        transparent
    );

    background: 
      // padding-box clip this background in to the overall element except the border.
        var(--main-bg) padding-box,
        // border-box extends this background to the border space
        var(--gradient-border) border-box,
        // Duplicate main background to fill in behind the gradient border. You can remove this if you want the border to extend "outside" the box background.
        var(--main-bg) border-box;

    background-position: center center;

    animation: bg-spin 4s linear infinite;
    @keyframes bg-spin {
        to {
            --border-angle: 1turn;
        }
    }

    &:hover {
        animation-play-state: paused;
    }
}

@property --border-angle {
    syntax: '<angle>';
    inherits: true;
    initial-value: 0turn;
}

.rotate-animation {
    display: inline-block;
    animation: rotate 8s linear infinite;
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.shake-animation {
    display: inline-block;
    animation: shake 3.5s ease-in-out infinite;
}

@keyframes shake {
    0% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(-20px); /* Move left */
    }
    50% {
        transform: translateX(0); /* Return to center */
    }
    75% {
        transform: translateX(20px); /* Move right */
    }
    100% {
        transform: translateX(0); /* Return to center */
    }
}

.animate-rotate-3d {
    animation: transform 15s infinite cubic-bezier(0.5, 2, 0.5, 1);
}

@keyframes transform {
    0% {
        transform: rotate3d(0, 0, 0, 0deg) translate(0px, 0px);
    }

    10% {
        transform: rotate3d(5, 5, 5, 10deg) translate(50px, 0px);
    }

    20% {
        transform: rotate3d(60, -40, 30, 30deg) translate(0px, 0px);
    }

    50% {
        transform: rotate3d(450, 2, 51, 0deg) translate(50px, 0px);
    }

    100% {
        transform: rotate3d(0, 0, 0, 0deg);
    }
}

@keyframes moveLeftRight {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(-50px); // Move left
    }
    100% {
        transform: translateX(0); // Move back to the original position
    }
}

@keyframes moveTopBottom {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-50px); // Move left
    }
    100% {
        transform: translateY(0); // Move back to the original position
    }
}

.moving-left-right {
    animation: moveLeftRight 3.5s ease-in-out infinite;
}

.moving-top-bottom {
    animation: moveTopBottom 3.5s ease-in-out infinite;
}

.backwards {
    display: inline;
    -moz-transform: scale(-1, -1);
    -webkit-transform: scale(-1, -1);
    -o-transform: scale(-1, -1);
    -ms-transform: scale(-1, -1);
    transform: scale(-1, -1);
}
/* Left to Right Animation */
.left-to-right {
    animation: scrollLeftToRight 400s linear infinite;
}

@keyframes scrollLeftToRight {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Right to Left Animation */
.right-to-left {
    animation: scrollRightToLeft 400s linear infinite;
}

@keyframes scrollRightToLeft {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-100%);
    }
}
